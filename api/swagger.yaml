openapi: "3.0.2"
info:
  title: Chat Dancer
  version: "1.0"
servers:
  - url: 'https://chat-dancier.net'
  - url: 'http://localhost:8080'
paths:
  /chats:
    get:
      parameters:
        - $ref: '#/components/parameters/user_id'
      summary: returns a list of all chats of a user. The list endpoint does only return the latest message, the messages array will only be filled on fecthing messages for a chat
      responses:
        '200':
          description: "list of chats for a user"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chat_list_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Creates a new chat group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chat_creation'
      responses:
        '201':
          description: "chat created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chat_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /chats/{chat_id}/messages:
    get:
      summary: returns messages for a chat
      parameters:
        - $ref: '#/components/parameters/chat_id'
      responses:
        '200':
          description: "detailed data of a chat"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/message_list_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Creates a new message
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/base_message'
      responses:
        '201':
          description: "message created"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /users/{user_id}/new-messages-long-polling:
    get:
      summary: |
        Returns a list of new messages. New messages are messages created
        after the last check for new messages. This endpoint is used for long polling.
        It either returns a list of new messages or an empty body after a predefined time.
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: list of new messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/new_message_list_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /users/{user_id}/new-messages-polling:
    get:
      summary: |
        Returns a list of new messages. New messages are messages created
        after the last check for new messages. This endpoint is used for polling.
        It either returns a list of new messages or an empty body immediately.
      parameters:
        - $ref: '#/components/parameters/user_id'
      responses:
        '200':
          description: list of new messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/new_message_list_response'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  parameters:
    user_id:
      name: user_id
      in: query
      description: User ID
      required: true
      schema:
        type: string
    chat_id:
      name: chat_id
      in: path
      description: Chat ID
      required: true
      schema:
        type: string
  schemas:
    chat_list_response:
      type: object
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/detailed_chat'
    chat_creation:
      type: object
      properties:
        user_ids:
          type: array
          items:
            type: string
          example: [ 123, 321 ]
        type:
          $ref: '#/components/schemas/chat_type'
    chat_response:
      $ref: '#/components/schemas/detailed_chat'
    detailed_chat:
      allOf:
        - $ref: '#/components/schemas/base_chat'
        - $ref: '#/components/schemas/message_list_response'
        - type: object
          properties:
            last_message:
              $ref: '#/components/schemas/message'
    base_chat:
      properties:
        chat_id:
          type: string
          example: 543
        user_ids:
          type: array
          description: Ids of the users participating in the chat
          items:
            type: string
          example: [ 123, 321 ]
        last_activity:
          type: string
          format: date-time
          description: Datetime of the last activity from this chat
        type:
          $ref: '#/components/schemas/chat_type'
    chat_type:
      type: string
      enum:
        - group
        - direct
    new_message_list_response:
      type: object
      properties:
        new_messages:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  chat_id:
                    type: string
                    example: 123
              - $ref: '#/components/schemas/message_list_response'
    message_list_response:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/message'
    message:
      allOf:
        - $ref: '#/components/schemas/base_message'
        - type: object
          properties:
            is_read:
              type: boolean
              example: true
              description: |
                Defines if the recipient has already read the message
            is_new:
              type: boolean
              example: false
              description: |
                defines if this message was already loaded to the chat of the recipient. This happens either via long polling for new messages, by fetching all chats for the recipient or by fetching all messages for the specific chat between recipient and author.
            notification_timestamp:
              type: string
              format: date-time
              description: |
                If set the recipient was notified by email that this messgae was written for him.
    base_message:
      type: object
      properties:
        text:
          type: string
          description: The content of the message
          example: Lorem ipsum
        author:
          type: string
          description: The id of the author of the message
          example: 123
    error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
