openapi: "3.0.2"
info:
  title: Chat Dancer
  version: "1.0"
servers:
  - url: 'https://chat-dancier.net'
  - url: 'http://localhost:8080'
paths:
  /chats:
    get:
      parameters:
        - $ref: '#/components/parameters/dancerId'
      summary: returns a list of all chats of a dancer. This endpoint does only return the latest message, the messages array will only be filled on fetching messages for a chat or fetching a single chat
      responses:
        '200':
          description: "list of chats for a dancer"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chatListResponse'
              example:
                - chatId: 543
                  dancerIds: [123, 234]
                  lastActivity: "2022-10-10T18:29:48.843Z"
                  type: "GROUP"
                  lastMessage:
                    text: Lorem ipsum
                    authorId: 123
                    id: 1234
                    readByDancers: [123]
                    createdAt: "2022-10-10T18:29:48.843Z"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Creates a new chat group
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/chatCreation'
      responses:
        '201':
          description: "chat created"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/chatResponse'
              example:
                chatId: 543
                dancerIds: [123, 234]
                lastActivity: null
                type: "GROUP"
                lastMessage: null
          headers:
            location:
              schema:
                type: string
                example: https://chat-dancier.net/chats/123
              description: The location of the created resource.
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /chats/{chatId}:
    get:
      summary: returns a chat
      parameters:
        - $ref: '#/components/parameters/chatId'
      responses:
        '200':
          description: "Metadata of a chat"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/detailedChat'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /chats/{chatId}/messages:
    get:
      summary: returns messages for a chat
      parameters:
        - $ref: '#/components/parameters/chatId'
        - $ref: '#/components/parameters/lastMessageId'
      responses:
        '200':
          description: "detailed data of a chat"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/messageListResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    post:
      summary: Creates a new message
      parameters:
        - $ref: '#/components/parameters/chatId'
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/baseMessage'
      responses:
        '201':
          description: "message created"
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /new-messages-long-polling:
    get:
      summary: |
        Returns a list of new messages. New messages are messages created
        after the last check for new messages. This endpoint is used for long polling.
        It either returns a list of new messages or an empty body after a predefined time.
      parameters:
        - $ref: '#/components/parameters/dancerId'
      responses:
        '200':
          description: list of new messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newMessageListResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /new-messages-polling:
    get:
      summary: |
        Returns a list of new messages. New messages are messages created
        after the last check for new messages. This endpoint is used for polling.
        It either returns a list of new messages or an empty body immediately.
      parameters:
        - $ref: '#/components/parameters/dancerId'
      responses:
        '200':
          description: list of new messages
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/newMessageListResponse'
        default:
          description: Unexpected error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
components:
  parameters:
    dancerId:
      name: dancerId
      in: query
      description: Dancer ID
      required: true
      schema:
        type: string
    chatId:
      name: chatId
      in: path
      description: Chat ID
      required: true
      schema:
        type: string
    lastMessageId:
      name: lastMessageId
      in: query
      description: Id of the last message already received. If set, the endpoint only returns newer messages
      schema:
        type: string
  schemas:
    chatListResponse:
      type: object
      properties:
        chats:
          type: array
          items:
            $ref: '#/components/schemas/detailedChat'
    chatCreation:
      type: object
      properties:
        dancerIds:
          type: array
          items:
            type: string
          example: [ 123, 321 ]
        type:
          $ref: '#/components/schemas/chatType'
    chatResponse:
      $ref: '#/components/schemas/detailedChat'
    detailedChat:
      allOf:
        - $ref: '#/components/schemas/baseChat'
        - type: object
          properties:
            lastMessage:
              $ref: '#/components/schemas/message'
    baseChat:
      properties:
        chatId:
          type: string
          example: 543
        dancerIds:
          type: array
          description: Ids of the dancers participating in the chat
          items:
            type: string
          example: [ 123, 321 ]
        lastActivity:
          type: string
          format: date-time
          description: Datetime of the last activity from this chat
        type:
          $ref: '#/components/schemas/chatType'
    chatType:
      type: string
      enum:
        - GROUP
        - DIRECT
    newMessageListResponse:
      type: object
      properties:
        new_messages:
          type: array
          items:
            allOf:
              - type: object
                properties:
                  chatId:
                    type: string
                    example: 123
              - $ref: '#/components/schemas/messageListResponse'
    messageListResponse:
      type: object
      properties:
        messages:
          type: array
          items:
            $ref: '#/components/schemas/message'
    message:
      allOf:
        - $ref: '#/components/schemas/baseMessage'
        - type: object
          properties:
            id:
              type: string
              description: id of the message
              example: 1234
            readByDancers:
              type: array
              description: |
                Ids of dancers that already have read the message
              items:
                type: string
                example: 123
            createdAt:
              type: string
              format: date-time
              description: |
                Timestamp of message creation, used for sorting messages
    baseMessage:
      type: object
      properties:
        text:
          type: string
          description: The content of the message
          example: Lorem ipsum
        authorId:
          type: string
          description: The id of the author of the message
          example: 123
    error:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
